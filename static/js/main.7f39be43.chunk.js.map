{"version":3,"sources":["authpages/signup/index.js","components/sidenav/index.js","Chart/lineChart.js","Chart/pieChart.js","components/dashboard/index.js","components/order/index.js","components/advs/index.js","components/header/index.js","components/inventory/productlist.js","components/inventory/index.js","components/index.js","authpages/signin/index.js","routes/privateroute.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","header","marginTop","spacing","marginBottom","display","flexDirection","alignItems","justifyContent","card","borderRadius","padding","paper","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","classes","Container","component","maxWidth","CssBaseline","className","Card","Avatar","noValidate","Grid","container","item","xs","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","type","FormControlLabel","control","Checkbox","value","Button","justify","Box","mt","console","log","list","navItem","textDecoration","listItem","selected","email","fontSize","divider","background","userinfo","logo","marginLeft","fontWeight","purple","getContrastText","deepPurple","drawer","props","isMobile","height","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","SideNav","useTheme","open","togleDrawer","SwipeableDrawer","onOpen","onClose","style","List","to","key","activeClassName","ListItem","ListItemIcon","minWidth","ListItemText","primary","lineOption","tooltip","trigger","axisPointer","crossStyle","xAxis","data","axisLine","show","lineStyle","opacity","yAxis","series","areaStyle","echarts","graphic","LinearGradient","offset","smooth","pieOption","formatter","legend","orient","bottom","radius","avoidLabelOverlap","position","emphasis","labelLine","columns","format","toLocaleString","createData","photo","income","quantity","rows","DashBoard","useState","page","rowsPerPage","option","direction","sm","md","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","TableBody","slice","row","hover","role","tabIndex","code","alt","src","Order","Component","Advs","grow","flexGrow","menuButton","marginRight","title","search","shape","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","sectionMobile","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","onClick","renderMobileMenu","IconButton","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","price","root","maxHeight","ProductList","setPage","setRowsPerPage","TablePagination","rowsPerPageOptions","count","length","onChangePage","newPage","onChangeRowsPerPage","target","LinkRouter","RouterLink","link","icon","currencies","Inventory","currency","setCurrency","Fab","Breadcrumbs","Divider","htmlFor","size","select","onChange","helperText","Home","useMediaQuery","down","isOpen","setIsOpen","tf","useEffect","zIndex","path","Dashboard","SignIn","PrivateRoute","rest","render","Routes","exact","App","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7f39be43.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Card } from \"@material-ui/core\";\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://tvish.com/\">\r\n        Tvish\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n     header:{\r\n         marginTop: theme.spacing(6),\r\n         marginBottom:theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent:'center'\r\n    },\r\n    card:{\r\n       \r\n        borderRadius:'20px',\r\n        padding:'30px'\r\n    },\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n            <div className={classes.header}>\r\n          <Typography  component=\"span\" variant=\"h5\">\r\n             Tvish.com\r\n            </Typography>\r\n      </div>\r\n      <Card className={classes.card}>\r\n         <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"userid\"\r\n                name=\"userid\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"userid\"\r\n                label=\"User ID\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      </Card>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport clsx from 'clsx';\r\nimport {\r\n  makeStyles,\r\n  useTheme\r\n} from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { Typography, Avatar } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport SlideshowIcon from '@material-ui/icons/Slideshow';\r\nimport {\r\n  deepOrange,\r\n  deepPurple\r\n} from '@material-ui/core/colors';\r\nimport '../../scss/sidenav/index.scss'\r\nimport { NavLink } from 'react-router-dom';\r\nvar drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => {\r\n  console.log('props is');\r\n  return ({\r\n    list: {\r\n      color: '#fff',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    },\r\n    navItem: {\r\n      backgroundColor: 'transparent',\r\n      textDecoration: 'none',\r\n      color: '#fff',\r\n      '&:hover': {\r\n        backgroundColor: '#00000022'\r\n      }\r\n    },\r\n    listItem: {\r\n      backgroundColor: 'inherit',\r\n      textDecoration: 'none',\r\n      color: 'inherit',\r\n      width: '95%',\r\n      borderRadius: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    selected: {\r\n      backgroundColor: '#FF9E43',\r\n      '&:hover': {\r\n        backgroundColor: '#FF9E43'\r\n      }\r\n    },\r\n    email: {\r\n      fontSize: 13,\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      background: '#ffffff55',\r\n      width: '80%'\r\n    },\r\n    userinfo: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      color: '#fff',\r\n      marginBottom: theme.spacing(2),\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    logo: {\r\n      color: '#fff',\r\n      marginLeft: theme.spacing(4),\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(4),\r\n      fontWeight: 800\r\n    },\r\n    purple: {\r\n      color: theme.palette.getContrastText(deepPurple[500]),\r\n      backgroundColor: deepPurple[500],\r\n    },\r\n    drawer: {\r\n      width: props => (props.isMobile ? '100%' : drawerWidth),\r\n      height:'100%',\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      backgroundColor: '#00000055'\r\n    },\r\n    // drawerMobile: {\r\n    //   width: '100vw',\r\n    //   flexShrink: 0,\r\n    //   whiteSpace: 'nowrap',\r\n    //   backgroundColor: '#00000055'\r\n    // },\r\n    drawerOpen: {\r\n      width:props=>{console.log('props is' + props); return (props.isMobile?'100%':drawerWidth)},\r\n      height: '100%',\r\n      backgroundColor: '#00000055',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      backgroundColor: '#232A44',\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n  });\r\n});\r\nexport default function SideNav(props) {\r\n  console.log(props);\r\n  const theme = useTheme();\r\n  const open = props.open;\r\n  const togleDrawer = props.togleDrawer;\r\n  const isMobile = props.isMobile;\r\n  const classes = useStyles(isMobile);\r\n  const variant = (!isMobile) ? 'permanent' : 'temporary';\r\n  console.log('variant is'+ variant);\r\n  if(open || !isMobile){\r\n    return (\r\n      < >\r\n      <CssBaseline />\r\n      \r\n      <SwipeableDrawer \r\n        variant={variant}\r\n        open={open}\r\n        onOpen = {\r\n          () => {\r\n            console.log(togleDrawer);\r\n            togleDrawer(true)\r\n          }\r\n        }\r\n        onClose = {\r\n          () => {\r\n            console.log(togleDrawer);\r\n            togleDrawer(false)\r\n          }\r\n        }\r\n      >\r\n        < div style = {\r\n          {\r\n             backgroundColor: '#232A44',\r\n            width: drawerWidth,\r\n            height:'100%'\r\n          }\r\n        } >\r\n                    <div className={classes.logo}>\r\n            <Typography variant=\"h6\" >Tvish.com</Typography>\r\n            {/* <IconButton>\r\n              <\r\n            </IconButton> */}\r\n          </div>\r\n          <div className={classes.userinfo}>\r\n            <Avatar className={classes.purple}>A</Avatar>\r\n            <Typography className={classes.email}>ajaymati@gmail.com</Typography>\r\n          </div>\r\n          <List className={classes.list}>\r\n            < NavLink className = {\r\n              classes.navItem\r\n            }\r\n            to = '/dashboard'\r\n            key = '1'\r\n            activeClassName={classes.selected} >\r\n              <ListItem className = {\r\n              classes.listItem\r\n            } >\r\n                    < ListItemIcon style = {\r\n                    {\r\n                      minWidth:'40px'\r\n                    }\r\n                  } > < DashboardIcon style = {\r\n                    {\r\n                      color: '#fff'\r\n                    }\r\n                  }\r\n                  /> \r\n                  </ListItemIcon >\r\n                  < ListItemText primary = 'DashBoard' / >\r\n              </ListItem>\r\n              </NavLink>\r\n            < NavLink className = {\r\n              classes.navItem\r\n            }\r\n            to = '/order'\r\n            key = '2'\r\n            activeClassName={classes.selected} >\r\n              <ListItem className = {\r\n              classes.listItem\r\n            } >\r\n                \r\n                    < ListItemIcon style = {\r\n                    {\r\n                      minWidth:'40px'\r\n                    }\r\n                  } > < ShoppingCartIcon style = {\r\n                    {\r\n                      color: '#fff'\r\n                    }\r\n                  }\r\n                  /> \r\n                  </ListItemIcon >\r\n                  < ListItemText primary = 'Orders' / >\r\n              </ListItem>\r\n              </NavLink>\r\n                          < NavLink className = {\r\n              classes.navItem\r\n            }\r\n            to = '/inventory'\r\n            key = '3'\r\n            activeClassName={classes.selected} >\r\n              <ListItem className = {\r\n              classes.listItem\r\n            } >\r\n                    < ListItemIcon style = {\r\n                    {\r\n                      minWidth:'40px'\r\n                    }\r\n                  } > < StoreIcon style = {\r\n                    {\r\n                      color: '#fff'\r\n                    }\r\n                  }\r\n                  /> \r\n                  </ListItemIcon >\r\n                  < ListItemText primary = 'Inventory' / >\r\n              </ListItem>\r\n              </NavLink>\r\n             < NavLink className = {\r\n              classes.navItem\r\n            }\r\n            to = '/adv'\r\n            key = '4'\r\n            activeClassName={classes.selected} >\r\n              <ListItem className = {\r\n              classes.listItem\r\n            } >\r\n                \r\n                    < ListItemIcon style = {\r\n                    {\r\n                      minWidth:'40px'\r\n                    }\r\n                  } > < SlideshowIcon style = {\r\n                    {\r\n                      color: '#fff'\r\n                    }\r\n                  }\r\n                  /> \r\n                  </ListItemIcon >\r\n                  < ListItemText primary = 'Advertisement' / >\r\n              </ListItem>\r\n              </NavLink>\r\n          </List>\r\n        </div>\r\n        </SwipeableDrawer>\r\n      </>\r\n    )\r\n  }\r\n  else{\r\n    return null;\r\n  }\r\n    \r\n}\r\n","import echarts from 'echarts'\r\nconst lineOption= {\r\n    backgroundColor:'#7467EF',\r\n    color:'#fff',\r\n    tooltip: {\r\n        trigger: 'axis',\r\n            axisPointer: {\r\n            type: 'cross',\r\n            crossStyle:{\r\n                color:'#fff'\r\n            }\r\n        },\r\n\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['jan', 'feb', 'mar', 'april', 'may', 'jun', 'jul','aug','sep','oct','nov','dec'],\r\n        axisLine: {\r\n            show:false,\r\n            lineStyle: {\r\n                color: \"rgba(249, 248, 248, 1)\",\r\n                opacity:0\r\n            }\r\n        },\r\n        axisPointer:{\r\n            label:{\r\n                color:'#fff',\r\n                backgroundColor:'rgba(#000,0.1)'\r\n            }\r\n        }\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        axisLine: {\r\n            show:false,\r\n            // lineStyle: {\r\n            //     color: \"rgba(249, 248, 248, 1)\"\r\n            // }\r\n        }\r\n        // axisPointer:{\r\n        //     label:{\r\n        //         color:'#fff',\r\n        //         backgroundColor:'rgba(#000,0.1)'\r\n        //     }\r\n        // }\r\n    },\r\n    series: [{\r\n\r\n            areaStyle: {\r\n                color: new echarts.graphic.LinearGradient(0, 0, 0, 0.5, [{\r\n                    offset: 0,\r\n                    color: 'rgba(255, 255, 255,0.5)'\r\n                }, {\r\n                    offset: 1,\r\n                    color: 'rgb(255, 255, 255,0.1)'\r\n                }])\r\n            },\r\n        data: [820, 932, 901, 934, 1290, 1330, 1320,1000,1200,900,1500,700],\r\n        type: 'line',\r\n        smooth: true,\r\n        // label:{\r\n        //     color:'#fff',\r\n        //     backgroundColor:'rgba(#000,0.1)'\r\n        // },\r\n        // lineStyle: {\r\n        //     color: \"rgba(249, 248, 248, 1)\"\r\n        // }\r\n    }]\r\n};\r\nexport default lineOption;","const pieOption = {\r\n    tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n    },\r\n    legend: {\r\n        orient: 'horizontal',\r\n        bottom:0,\r\n        data: ['Shipping', 'to be delivered', 'Successful transaction', 'Refunding']\r\n    },\r\n    series: [\r\n        {\r\n            name: 'Order Summary',\r\n            type: 'pie',\r\n            radius: ['40%', '70%'],\r\n            avoidLabelOverlap: false,\r\n            label: {\r\n                show: false,\r\n                position: 'center'\r\n            },\r\n            emphasis: {\r\n                label: {\r\n                    show: true,\r\n                    fontSize: '20',\r\n                    fontWeight: 'bold'\r\n                }\r\n            },\r\n            labelLine: {\r\n                show: false\r\n            },\r\n            data: [\r\n                {value: 335, name: 'Shipping'},\r\n                {value: 310, name: 'to be delivered'},\r\n                {value: 234, name: 'Successful transaction'},\r\n                {value: 135, name: 'Refunding'}\r\n                \r\n            ]\r\n        }\r\n    ]\r\n};\r\nexport default pieOption;","import React, { Component,useState } from 'react'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport lineOption from '../../Chart/lineChart'\r\nimport pieOption from '../../Chart/pieChart'\r\nimport '../../scss/dashboard/index.scss'\r\nimport {\r\n  Grid,\r\n  Paper,\r\n  Link,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell\r\n\r\n} from '@material-ui/core'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport \r\n  ImageIcon\r\n from '@material-ui/icons/Image'\r\nimport { Link as RLink } from 'react-router-dom';\r\n\r\nconst columns = [\r\n  {\r\n    id: 'name',\r\n    label: 'Name',\r\n    minWidth: 10\r\n  },\r\n  {\r\n    id: 'photo',\r\n    label: 'Photo',\r\n    minWidth: 10,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'income',\r\n    label: 'Revenue',\r\n    minWidth: 10,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    label: 'Quantity',\r\n    minWidth: 10,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  }\r\n];\r\nfunction createData(name, photo, income, quantity) {\r\n  return {\r\n    name,\r\n    photo,\r\n    income,\r\n    quantity\r\n  }\r\n}\r\nconst rows = [\r\n  createData( 'Headphone', 'https://images-na.ssl-images-amazon.com/images/I/51rRwx6wJgL._SY355_.jpg', 1324171354, 10),\r\n  createData( 'Mask', 'https://static05.jockey.in/uploads/dealimages/10928/zoomimages/black-unisex-face-mask-pack-of-2-fm02-10.jpg', 1324171354, 15),\r\n  createData( 'Mouse', 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRVU4O1zvrtXUrKw8w3t0k-RQGU8GHLX8u0Lg&usqp=CAU', 1324171354, 25),\r\n  createData( 'Camera', 'https://static.bhphoto.com/images/multiple_images/images2500x2500/1540460716_IMG_1082721.jpg', 1324171354, 45),\r\n  createData( 'headphone', 'https://s3.us-east-2.amazonaws.com/cc-prd-s3-uploads/2019/3/12/7dcbe1bafdf6c711b1a1b639539e9291829d1e76.jpeg', 1324171354, 78),\r\n];\r\n\r\nexport default function DashBoard(props) {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n \r\n    return (\r\n      <>\r\n        <div className='chart-container'>\r\n          <div className='chart-header'>\r\n            <h5>Last 12 Months Sale</h5>\r\n          </div>\r\n          <div className='chart'>\r\n              < ReactEcharts option = {\r\n                lineOption\r\n                \r\n              }\r\n              style = {\r\n                {height: '350px'}\r\n              }\r\n              />\r\n          </div>\r\n        </div>\r\n        <div className='card-container'>\r\n          < Grid container\r\n          direction = \"row\"\r\n          justify = \"center\"\r\n          \r\n          spacing={2}\r\n          >\r\n            <Grid container direction=\"column\" item sm={12} md={8} spacing={2}>\r\n              <Grid container direction = \"row\" item sm={12} spacing={2}>\r\n                <Grid item xs={12} sm>\r\n                  <Paper className='card'>\r\n                    <div className='card-item'>\r\n                      <div className='card-head'>\r\n                        <div className='card-icon'>\r\n                            < ShoppingCartIcon style = {\r\n                              {\r\n                                fontSize: '40px'\r\n                              }\r\n                            }\r\n                            />\r\n                        </div>\r\n                        <div className='card-title'>\r\n                            <p className='title'>New Orders</p>\r\n                            <p className='subtitle'>350</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='card-tail'>\r\n                            <RLink>\r\n                              <Link>\r\n                              < ArrowRightAltIcon / >\r\n                              </Link>\r\n                            </RLink>\r\n                      </div>\r\n                    </div>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm>\r\n                  < Paper className = 'card' >\r\n                    <div className='card-item'>\r\n                      <div className='card-head'>\r\n                        <div className='card-icon'>\r\n                            < AttachMoneyIcon style = {\r\n                              {\r\n                                fontSize: '40px'\r\n                              }\r\n                            }\r\n                            />\r\n                        </div>\r\n                        <div className='card-title'>\r\n                            <p className='title'>Today's Sale</p>\r\n                            <p className='subtitle'>$3509</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='card-tail'>\r\n                            <RLink>\r\n                              <Link>\r\n                              < ArrowRightAltIcon / >\r\n                              </Link>\r\n                            </RLink>\r\n                      </div>\r\n                    </div>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n             \r\n              <Grid container direction = \"row\" item sm={12} spacing={2}>\r\n                <Grid item xs={12} sm>\r\n                  < Paper className = 'card' >\r\n                    <div className='card-item'>\r\n                      <div className='card-head'>\r\n                        <div className='card-icon'>\r\n                            < StoreIcon style = {\r\n                              {\r\n                                fontSize: '40px'\r\n                              }\r\n                            }\r\n                            />\r\n                        </div>\r\n                        <div className='card-title'>\r\n                            <p className='title'>Inventory Status</p>\r\n                            <p className='subtitle' style={{fontSize:'13px'}}>9.1 % stock surplas</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='card-tail'>\r\n                            <RLink>\r\n                              <Link>\r\n                              < ArrowRightAltIcon / >\r\n                              </Link>\r\n                            </RLink>\r\n                      </div>\r\n                    </div>\r\n                  </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm>\r\n                  < Paper className = 'card' >\r\n                    <div className='card-item'>\r\n                      <div className='card-head'>\r\n                        <div className='card-icon'>\r\n                            < ShoppingCartIcon style = {\r\n                              {\r\n                                fontSize: '40px'\r\n                              }\r\n                            }\r\n                            />\r\n                        </div>\r\n                        <div className='card-title'>\r\n                            <p className='title'>Total Orders</p>\r\n                            <p className='subtitle'>350</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className='card-tail'>\r\n                            <RLink>\r\n                              <Link>\r\n                              < ArrowRightAltIcon / >\r\n                              </Link>\r\n                            </RLink>\r\n                      </div>\r\n                    </div>\r\n                  </Paper>\r\n                </Grid>\r\n              </Grid>\r\n              {/* trending items */}\r\n              <Grid item sm={12} style={{width:'100%'}}>\r\n                    <Paper className='trending-menu' style={{padding:'20px'}}>\r\n                            <h1 className='heading'>\r\n                              Top Selling Products\r\n                            </h1>\r\n                            <TableContainer className='table-container'>\r\n                              <Table stickyHeader aria-label=\"sticky table\">\r\n                              <TableHead>\r\n                                <TableRow>\r\n                                  {columns.map((column) => (\r\n                                    <TableCell\r\n                                      key={column.id}\r\n                                      align={column.align}\r\n                                      style={{ minWidth: column.minWidth }}\r\n                                    >\r\n                                      {column.label}\r\n                                    </TableCell>\r\n                                  ))}\r\n                                </TableRow>\r\n                              </TableHead>\r\n                              <TableBody>\r\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                                  return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                      {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                          <TableCell key={column.id} align={column.align}>\r\n                                            {\r\n                                                (column.id === 'photo')?( < img style={{width:'100px', height:'100px'}} alt={row['name']} src={value} /> ): (column.format && typeof value === 'number' ? column.format(value) : value)\r\n                                            }\r\n                                          </TableCell>\r\n                                        );\r\n                                      })}\r\n                                    </TableRow>\r\n                                  );\r\n                                })}\r\n                              </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Paper>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container direction=\"column\" item sm={12} md={4} spacing={2}>\r\n                    <Grid item sm={12}>\r\n                          <Paper className='pie-container'>\r\n                            <div className='heading'>\r\n                              <h5>Orders</h5>\r\n                              <p>Last 30 days</p>\r\n                            </div>\r\n                           \r\n                             < ReactEcharts option = {\r\n                               pieOption\r\n\r\n                             }\r\n                             className = 'piechart' /\r\n                               >\r\n                          </Paper>\r\n                    </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n\r\n      </>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Order extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Advs extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        \r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow:1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMobile=props.isMobile;\r\n  const togleDrawer = props.togleDrawer;\r\n  const open= props.open;\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n      \r\n    >\r\n      <MenuItem  onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    < div className = {\r\n      classes.grow\r\n    }\r\n    style={{\r\n      padding:'1px',\r\n      background: '#7467EF',\r\n    }}\r\n    >\r\n      < AppBar style = {\r\n        {\r\n          background: '#7467EF', \r\n        }\r\n      }\r\n      position = \"static\" >\r\n        <Toolbar>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          {/* <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Material-UI\r\n          </Typography> */}\r\n          {/* <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div> */}\r\n          {\r\n            isMobile ? < IconButton onClick = {\r\n              () => {\r\n                console.log('clicked')\r\n                togleDrawer(!open)\r\n                }\r\n            } >\r\n            <MenuIcon  />\r\n          </IconButton>:''}\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from 'react-redux';\r\n\r\nconst columns = [\r\n  { id: 'id', label: 'ID', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 100 },\r\n  {\r\n    id: 'photo',\r\n    label: 'Photo',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'price',\r\n    label: 'Price',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n      id:'quantity',\r\n      label: 'Quantity',\r\n      minWidth:170,\r\n      align: 'right',\r\n      format: (value) => value.toLocaleString('en-US'),\r\n  }\r\n];\r\n// , {\r\n//     id: 'action',\r\n//     label: 'Actions',\r\n//     minWidth: 170\r\n// }\r\nfunction createData(id,name, photo, price,quantity) {\r\n  return { id, name, photo, price,quantity };\r\n}\r\n\r\nconst rows = [\r\n  createData('1234', 'Headphone', 'https://images-na.ssl-images-amazon.com/images/I/51rRwx6wJgL._SY355_.jpg', 1324171354, 3287263),\r\n  createData('7562', 'Mask', 'https://static05.jockey.in/uploads/dealimages/10928/zoomimages/black-unisex-face-mask-pack-of-2-fm02-10.jpg', 1324171354, 3287263),\r\n  createData('1234', 'Mouse', 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRVU4O1zvrtXUrKw8w3t0k-RQGU8GHLX8u0Lg&usqp=CAU', 1324171354, 3287263),\r\n  createData('1234', 'Camera', 'https://static.bhphoto.com/images/multiple_images/images2500x2500/1540460716_IMG_1082721.jpg', 1324171354, 3287263),\r\n  createData('1234', 'headphone', 'https://s3.us-east-2.amazonaws.com/cc-prd-s3-uploads/2019/3/12/7dcbe1bafdf6c711b1a1b639539e9291829d1e76.jpeg', 1324171354, 3287263),\r\n];\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n// @connect((state)=>({products:state.products}))\r\n function ProductList(props) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                         {\r\n                             (column.id === 'photo')?( < img style={{width:'100px', height:'100px'}} alt={row['name']} src={value} /> ): (column.format && typeof value === 'number' ? column.format(value) : value)\r\n                         }\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\nexport default ProductList;\r\n// export default connect((state)=>({productlist:state.ProductList}))(ProductList)","import React, { Component } from 'react'\r\nimport {Link, Breadcrumbs,TextField,Divider, Button, Fab} from '@material-ui/core'\r\nimport {Link as RouterLink} from 'react-router-dom'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  makeStyles\r\n} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport '../../scss/inventory/index.scss';\r\nimport ProductList from './productlist'\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },          \r\n}));\r\nconst currencies = [{\r\n    value: 'USD',\r\n    label: '$',\r\n  },\r\n  {\r\n    value: 'EUR',\r\n    label: '€',\r\n  },\r\n  {\r\n    value: 'BTC',\r\n    label: '฿',\r\n  },\r\n  {\r\n    value: 'JPY',\r\n    label: '¥',\r\n  },\r\n];\r\nexport default function Inventory(props) {\r\n    const classes = useStyles();\r\n    const products=[];\r\n    const [currency, setCurrency] = React.useState('EUR');\r\n    const handleChange = (event) => {\r\n      setCurrency(event.target.value);\r\n    };\r\n\r\n    return (\r\n      <div className='inventory-container'>\r\n        <Fab className='fab' color=\"primary\" aria-label=\"add\">\r\n            <AddIcon />\r\n        </Fab>\r\n        <Breadcrumbs style={{marginTop:'12px'}}>\r\n            <LinkRouter className={classes.link} to='/dashboard'> <HomeIcon className={classes.icon} /> Home</LinkRouter>\r\n            <Typography color=\"textPrimary\" className={classes.link}>\r\n            Inventory\r\n            </Typography>\r\n        </Breadcrumbs>\r\n        <div className='heading' >\r\n          <h2>Product List</h2>\r\n          <p>Warehouse product information display, you can add new product,edit existing product,public product and export products</p>\r\n        </div>\r\n        {/* <hr className='divider' /> */}\r\n        <Divider />\r\n        \r\n            < form className = 'filter-menu' >\r\n              <div className='input-group'>\r\n                <label htmlFor='id'>Id : &nbsp;&nbsp;&nbsp;</label>\r\n                <TextField size='small' variant='outlined' />\r\n              </div>\r\n              <div className='input-group'>\r\n                <label htmlFor='id'>Product :&nbsp;</label>\r\n                < TextField size = 'small'\r\n                variant = 'outlined' / >\r\n              </div>\r\n              <div className='input-group'>\r\n                <label htmlFor='id'>Category :&nbsp;&nbsp;&nbsp;</label>\r\n                < TextField \r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  value={currency}\r\n                  onChange={handleChange}\r\n                  helperText=\"Please select your currency\"\r\n                  variant=\"outlined\"\r\n                >\r\n                  {currencies.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </div>\r\n              <div className='input-group'>\r\n                 < Button\r\n                 variant = \"contained\"\r\n                 color = \"primary\" > Apply </Button>\r\n              </div>\r\n            </form>\r\n        <Divider />\r\n        <div className='product-menu'>\r\n          <ProductList />\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n","import React, { Component,useState,useEffect } from 'react'\r\nimport SideNav from './sidenav'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Dashboard from './dashboard'\r\nimport Order from './order'\r\nimport Advs from './advs'\r\nimport Header from './header'\r\nimport Inventory from './inventory'\r\nimport {\r\n  useTheme\r\n} from '@material-ui/core/styles';\r\nimport { useMediaQuery } from '@material-ui/core'\r\nvar drawerWidth = 240;\r\nvar appBarWidth = 50;\r\nexport default function Home (props) {\r\n\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    console.log('isMobile is' + isMobile);\r\n    const [isOpen,setIsOpen]= useState(!isMobile);\r\n\r\n    const togleDrawer = (tf) => {\r\n      console.log('toogle Drawer called')\r\n      setIsOpen(tf);\r\n      console.log(isOpen);\r\n    }\r\n    useEffect(() => {\r\n      console.log('useeffect called');\r\n      setIsOpen(!isMobile);\r\n    }, [isMobile])\r\n\r\n    return (\r\n      <div className=\"root\">\r\n        <SideNav  isMobile={isMobile} open={isOpen} togleDrawer={togleDrawer} />\r\n        <main style={{marginLeft:`${(!isMobile)?drawerWidth:0}px`}}>\r\n                <Header isMobile={isMobile} open={isOpen} togleDrawer={togleDrawer} />\r\n            <section style={{zIndex:'-1'}}>\r\n                <Switch>\r\n                    <Route path='/dashboard' component={Dashboard} />\r\n                    <Route path='/order' component={Order} />\r\n                    <Route path='/adv' component={Advs} />\r\n                    <Route path='/inventory' component={Inventory} />\r\n                    <Redirect to='/dashboard' />\r\n                </Switch>\r\n            </section>\r\n        </main>\r\n      </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://tvish.com/\">\r\n        Tvish\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    header:{\r\n         marginTop: theme.spacing(6),\r\n         marginBottom:theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent:'center'\r\n    },\r\n    card:{\r\n       \r\n        borderRadius:'20px',\r\n        padding:'30px'\r\n    },\r\n  paper: {\r\n    \r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    borderRadius:'20px'\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container  component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.header}>\r\n          <Typography  component=\"span\" variant=\"h5\">\r\n             Tvish.com\r\n            </Typography>\r\n      </div>\r\n        <Card className={classes.card}>\r\n        <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n     \r\n        </Card>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  \r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ component:Component, ...rest }) {\r\n  const isAuthenticated = true;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => (isAuthenticated ? <Component /> : <Redirect to=\"/signin\" />)}\r\n    />\r\n  );\r\n}\r\n","import React, { Component } from 'react'\r\nimport SignUp from '../authpages/signup'\r\nimport { HashRouter, Route } from 'react-router-dom'\r\nimport Home from '../components';\r\nimport SignIn from '../authpages/signin'\r\nimport {Switch} from 'react-router-dom'\r\nimport PrivateRoute from './privateroute'\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n            <Route exact path=\"/signin\" component={SignIn} />\r\n            <Route exact path=\"/signup\" component={SignUp} />\r\n            <PrivateRoute component={Home} />\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from \"react\";\nimport Routes from \"./routes\";\nimport reducers from \"./redux/reducers\";\nimport { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport { Provider } from \"react-redux\";\n// var store = createStore(reducers, applyMiddleware(thunk, logger));\nfunction App() {\n  return ( < Routes / >);\n    {/* // <Provider store={store}>\n    // </Provider>\n  ); */}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}